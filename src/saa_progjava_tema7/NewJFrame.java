/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package saa_progjava_tema7;

import java.awt.ComponentOrientation;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.OutputStreamWriter;
import java.io.PrintWriter;
import java.util.Scanner;
import javax.swing.JFileChooser;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author asel3
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public final int ROW_COUNT = 5, COLUMN_COUNT = 6;
    public String FileName, DirName; // Имя входного файла с данными и его каталог
    public int[][] matrix = new int[ROW_COUNT][COLUMN_COUNT]; // Массив для обработки данных

    public NewJFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabelInput = new javax.swing.JLabel();
        jLabelOutput = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jButtonUpload = new javax.swing.JButton();
        jButtonProcessing = new javax.swing.JButton();
        jButtonSave = new javax.swing.JButton();
        jLabelResult = new javax.swing.JLabel();
        jLabelTask = new javax.swing.JLabel();

        jFileChooser1.setAcceptAllFileFilterUsed(false);
        jFileChooser1.setCurrentDirectory(new File(".").getAbsoluteFile().getParentFile());
        jFileChooser1.setDialogTitle("Выбор файла");
        jFileChooser1.setFileFilter(new FileNameExtensionFilter("TXT files", "txt"));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(null);

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 40, 330, 120);

        jLabelInput.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabelInput.setText("Исходные данные:");
        getContentPane().add(jLabelInput);
        jLabelInput.setBounds(20, 10, 130, 17);

        jLabelOutput.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        jLabelOutput.setText("Выходные данные:");
        getContentPane().add(jLabelOutput);
        jLabelOutput.setBounds(20, 170, 150, 17);

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jScrollPane2.setViewportView(jTextArea2);

        getContentPane().add(jScrollPane2);
        jScrollPane2.setBounds(10, 200, 330, 130);

        jButtonUpload.setText("Загрузить данные из файла");
        jButtonUpload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUploadActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonUpload);
        jButtonUpload.setBounds(80, 350, 190, 21);

        jButtonProcessing.setText("Обработать данные");
        jButtonProcessing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonProcessingActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonProcessing);
        jButtonProcessing.setBounds(80, 380, 190, 21);

        jButtonSave.setText("Сохранить данные в файл");
        jButtonSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSaveActionPerformed(evt);
            }
        });
        getContentPane().add(jButtonSave);
        jButtonSave.setBounds(80, 410, 190, 21);

        jLabelResult.setFont(new java.awt.Font("Arial", 0, 14)); // NOI18N
        getContentPane().add(jLabelResult);
        jLabelResult.setBounds(20, 330, 320, 13);

        jLabelTask.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabelTask.setText("<html>Если сумма элементов в 1-й строке не равна <br>максимальному элементу таблицы, то <br>увеличить этот максимальный элемент в 2 раза");
        getContentPane().add(jLabelTask);
        jLabelTask.setBounds(20, 432, 320, 60);

        setSize(new java.awt.Dimension(364, 537));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonUploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUploadActionPerformed
        // TODO add your handling code here:
        
        int ret = jFileChooser1.showDialog(null, "Выбрать"); // Вызываем диалог
        if (ret != JFileChooser.APPROVE_OPTION) {
            return;
        } // Если файл не выбран, то выход

        FileName = jFileChooser1.getSelectedFile().getPath(); // Получение имени файла
        DirName = jFileChooser1.getSelectedFile().getParent() + System.getProperty("file.separator"); // Получение каталога файла
        
        try {
            Scanner fileIINPUT = new Scanner(new FileInputStream(FileName));
            // Читаем с файла данные и выводим массив
            jTextArea1.setText("");
            for (int i = 0; i < ROW_COUNT; i++) {
                for (int j = 0; j < COLUMN_COUNT; j++) {
                    matrix[i][j] = fileIINPUT.nextInt();
                    jTextArea1.append(String.format("%5d", matrix[i][j]));
                }
                jTextArea1.append("\n");
            }
            
        } catch (Exception ex) {
            jTextArea1.setText("Ошибка чтения файла!");
        }



    }//GEN-LAST:event_jButtonUploadActionPerformed

    private void jButtonProcessingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonProcessingActionPerformed
        
        int MAX_VALUE = matrix[0][0];
        int MAX_I = 0;
        int MAX_J = 0;
        int sumOf1row = 0;
        boolean condition = false;
        for (int i=0; i<ROW_COUNT; i++){
            for (int j=0; j<COLUMN_COUNT; j++){
                if (matrix[i][j]>MAX_VALUE){
                    MAX_VALUE=matrix[i][j];
                    MAX_I = i;
                    MAX_J = j;
                }
            }
        }
        
        for (int j=0; j<COLUMN_COUNT; j++){
            sumOf1row+=matrix[0][j];            
        }
        jLabelResult.setText("Sum1("+sumOf1row+")");
        if (sumOf1row==MAX_VALUE){
            condition=true;
            jLabelResult.setText(jLabelResult.getText()+"=");
        } else{
            jLabelResult.setText(jLabelResult.getText()+"\u2260");
        }
        jLabelResult.setText(jLabelResult.getText()+"Max("+MAX_VALUE+")");
        
        if (!condition){
            matrix[MAX_I][MAX_J]=MAX_VALUE*2;
            jLabelResult.setText(jLabelResult.getText()+". New MAX="+matrix[MAX_I][MAX_J]);
            
        }
        
                                         

    }//GEN-LAST:event_jButtonProcessingActionPerformed

    private void jButtonSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSaveActionPerformed
        try {
            PrintWriter fileOUTPUT = new PrintWriter(new OutputStreamWriter(new FileOutputStream(DirName + "output.txt")));

            // Вывод результирующего массива в файл
            for (int i = 0; i < ROW_COUNT; i++) { fileOUTPUT.println("");
                for (int j = 0; j < COLUMN_COUNT; j++) {
                    fileOUTPUT.print(String.format("%5d", matrix[i][j]));
                }
            }

            // Сохранение и закрытие файла
            fileOUTPUT.flush(); fileOUTPUT.close();
            
            // Вывод результирующего массива на экран
            jTextArea2.setText("");
            for (int i = 0; i < 5; i++) {
                for (int j = 0; j < 6; j++) {
                    jTextArea2.append(String.format("%5d", matrix[i][j]));
                } jTextArea2.append("\n");
            }

        } catch (Exception e) {
            jTextArea2.setText("Ошибка сохранения файла!");
        }
    }//GEN-LAST:event_jButtonSaveActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonProcessing;
    private javax.swing.JButton jButtonSave;
    private javax.swing.JButton jButtonUpload;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabelInput;
    private javax.swing.JLabel jLabelOutput;
    private javax.swing.JLabel jLabelResult;
    private javax.swing.JLabel jLabelTask;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    // End of variables declaration//GEN-END:variables
}
